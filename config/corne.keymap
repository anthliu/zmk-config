#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

// Layer Definitions
#define BASE 0
#define GAMING 1
#define LAYERS 2
#define NAV 3
#define MOUSE 4
#define MEDIA 5
#define NUM 6
#define SYM 7
#define FN 8

#define U_STRINGIFY(x) #x
#define U_MACRO(name,...) \
/ { \
  macros { \
    name: name { \
      label = U_STRINGIFY(ZM_ ## name); \
      compatible = "zmk,behavior-macro"; \
      #binding-cells = <0>; \
      __VA_ARGS__ \
    }; \
  }; \
};

#define SHIFT_FUNC(NAME, BINDING, SHIFT_BINDING) \
/ { \
  behaviors { \
    NAME: NAME { \
      compatible = "zmk,behavior-mod-morph"; \
      label = U_STRINGIFY(NAME); \
      #binding-cells = <0>; \
      bindings = <BINDING>, <SHIFT_BINDING>; \
      mods = <(MOD_LSFT|MOD_RSFT)>; \
    }; \
  }; \
};

#define SHIFT_MACRO(NAME, BINDING, SHIFT_BINDING) \
U_MACRO(u_macro_ ## NAME, wait-ms = <0>; bindings = <SHIFT_BINDING>;) \
SHIFT_FUNCTION(NAME, BINDING, &u_macro_ ## NAME)

// Behavior configuration
&mt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};
&lt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};
&sk {
    release-after-ms = <500>;
    quick-release;
};

// Keymap configuration
/ {
    keymap {
        compatible = "zmk,keymap";

        base {
// -----------------------------------------------------------------------------------------------------------------------------
// |        |   Q    |   W    |     E     |     R     |     T     | # |     Y     |     U    |    I    |    O   |   P    |     |
// | LAYERS | A/LGUI | S/LALT |  D/LCTRL  |  F/LSHFT  |     G     | # |     H     | J/LSHFT  | K/LCTRR | L/LALT | ;/LGUI |     |
// |        |   Z    | X/RALT |     C     |     V     |     B     | # |     N     |     M    |    ,    | ./RALT |   /    |     |
//                            | ESC/MEDIA | SPACE/NAV | TAB/MOUSE | # | ENTER/SYM | BSPC/NUM | DEL/FN  |

            label = "Base";
            bindings = <
&trans      &kp Q       &kp W       &kp F          &kp P          &kp B                &kp J          &kp L         &kp U          &kp Y         &kp SQT     &trans
&mo LAYERS  &mt LGUI A  &mt LALT R  &mt LCTRL S    &mt LSHFT T    &kp G                &kp M          &mt LSHFT N   &mt LCTRL E    &mt LALT I    &mt LGUI O  &trans
&trans      &kp Z       &mt RALT X  &kp C          &kp D          &kp V                &kp K          &kp H         &kp CMMA       &mt RALT DOT  &kp FSLH    &trans
                                    &lt MEDIA ESC  &lt NAV SPACE  &lt MOUSE TAB        &lt SYM ENTER  &lt NUM BSPC  &lt FN DEL
            >;
        };

        gaming {
// ----------------------------------------------------------------------------------------------------
// |        | TAB   |   1   |   2   |   3   |   4   | # |   Y   |   U   |   I   |   O   |   P   |     |
// | LAYERS | CTRL  |   Q   |   W   |   E   |   R   | # |   H   |   J   |   K   |   L   |   ;   |     |
// |        | SHIFT |   A   |   S   |   D   |   F   | # |   N   |   M   |   ,   |   .   |   /   |     |
//                          |  ESC  | SPACE |  TAB  | # | ENTER | BSPC  |  DEL  |

            label = "Gaming";
            bindings = <
&trans      &kp TAB    &kp N1 &kp N2   &kp N3     &kp N4         &trans     &trans    &trans    &trans    &trans    &trans
&mo LAYERS  &kp LCTRL  &kp Q  &kp W    &kp E      &kp R          &trans     &trans    &trans    &trans    &trans    &trans
&trans      &kp LSHFT  &kp A  &kp S    &kp D      &kp F          &trans     &trans    &trans    &trans    &trans    &trans
                      &kp ESC  &kp SPACE  &kp TAB        &kp ENTER  &kp BSPC  &kp DEL
            >;
        };

        layers {
// ---------------------------------------------------------------------------------------------
// |      |     |     |     |     |     | # |     |     |         |        |     |     |
// | HELD |     |     |     |     |     | # |     |     | BASE    | GAMING |     |     |
// |      |     |     |     |     |     | # |     |     |         |        |     |     |
//                    |     |     |     | # |     |     |         |

            label = "BLayers";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans        &trans  &trans  &trans       &trans      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans        &trans  &trans  &to BASE     &to GAMING  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans        &trans  &trans  &trans       &trans      &trans  &trans
                        &trans  &trans  &trans        &trans  &trans  &trans
            >;
        };


        navigation {
// -------------------------------------------------------------------------------------------
// |     |      |      |       |       |     | # | REDO  | CUT  | COPY | PASTE | UNDO  |     |
// |     | LGUI | LALT | LCTRL | LSHFT |     | # | CAPS  | LEFT | DOWN | UP    | RIGHT |     |
// |     |      | RALT |       |       |     | # | INS   | HOME | PGDN | PGUP  | END   |     |
//                     |       | HELD  |     | # | ENTER | BSPC | DEL  |

            label = "Nav";
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans        &kp K_REDO    &kp K_CUT  &kp K_COPY  &kp K_PASTE  &kp K_UNDO  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans        &kp CAPSLOCK  &kp LEFT   &kp DOWN    &kp UP       &kp RIGHT   &trans
&trans  &trans    &kp RALT  &trans     &trans     &trans        &kp INS       &kp HOME   &kp PG_DN   &kp PG_UP    &kp END     &trans
                            &trans     &trans     &trans        &kp ENTER     &kp BSPC   &kp DEL
            >;
        };

// TODO

        mouse {
// ------------------------------------------------------------------------------------
// |     |      |      |       |       |      | # |     |     |     |     |     |     |
// |     | LGUI | LALT | LCTRL | LSHFT |      | # |     |     |     |     |     |     |
// |     |      | RALT |       |       |      | # |     |     |     |     |     |     |
//                     |       |       | HELD | # |     |     |     |

            label = "Mouse";
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &kp RALT  &trans     &trans     &trans        &trans  &trans  &trans  &trans  &trans  &trans
                            &trans     &trans     &trans        &trans  &trans  &trans
            >;
        };

        media {
// -----------------------------------------------------------------------------------------------------
// |     |      |      |       |       |      | # | RGB_TOG  |        | BR_D   | BR_U   | EP_ON  |     |
// |     | LGUI | LALT | LCTRL | LSHFT |      | # | EP_TOG   | PREV   | VOL_D  | VOL_U  | NEXT   |     |
// |     |      | RALT |       |       |      | # | OUT_TOG  | BT_0   | BT_1   | BT_2   | BT_3   |     |
//                     | HELD  |       |      | # | STOP     | PLAY/P | MUTE   |
            label = "Media";
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans        &bootloader       &trans        &cp C_BRI_DN  &cp C_BRI_UP  &ext_power EP_ON  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans        &ext_power EP_TOG &cp C_PREV    &cp C_VOL_DN  &cp C_VOL_UP  &cp C_NEXT        &trans
&trans  &trans    &kp RALT  &trans     &trans     &trans        &out OUT_TOG      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3      &trans
                            &trans     &trans     &trans        &cp C_STOP        &cp C_PP      &cp C_MUTE
            >;
        };

        numbers {
// -----------------------------------------------------------------------------------
// |     |  [  |  7  |  8  |  9  |  ]  | # |     |       |       |      |      |     |
// |     |  ;  |  4  |  5  |  6  |  =  | # |     | LSHFT | LCTRL | LALT | LGUI |     |
// |     |  `  |  1  |  2  |  3  |  \  | # |     |       |       | RALT |      |     |
//                   |  .  |  0  |  -  | # |     | HELD  |       |

            label = "Num";
            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT         &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp SQT    &kp N4  &kp N5   &kp N6  &kp EQUAL        &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH         &trans  &trans     &trans     &kp RALT  &trans    &trans
                           &kp DOT  &kp N0  &kp MINUS        &trans  &trans     &trans
            >;
        };

        symbols {
// ------------------------------------------------------------------------------------
// |     |  {  |  &  |  *  |  (  |  }  | # |      |       |       |      |      |     |
// |     |  :  |  $  |  %  |  ^  |  +  | # |      | LSHFT | LCTRL | LALT | LGUI |     |
// |     |  ~  |  !  |  @  |  #  |  |  | # |      |       |       | RALT |      |     |
//                   |  (  |  )  |  _  | # | HELD |       |       |

            label = "Symb";
            bindings = <
&trans  &kp LBRC   &kp AMPS  &kp ASTRK  &kp LPAR   &kp RBRC              &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp DQT    &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS              &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp TILDE  &kp EXCL  &kp AT     &kp HASH   &kp PIPE              &trans  &trans     &trans     &kp RALT  &trans    &trans
                             &kp LPAR   &kp RPAR   &kp UNDERSCORE        &trans  &trans     &trans
            >;
        };

        function {
// ------------------------------------------------------------------------------------------
// |     |  F12 |  F7  |  F8  |  F9   | PSCRN | # |     |       |       |      |      |     |
// |     |  F11 |  F4  |  F5  |  F6   | SLCK  | # |     | LSHFT | LCTRL | LALT | LGUI |     |
// |     |  F10 |  F1  |  F2  |  F3   | PAUSE | # |     |       |       | RALT |      |     |
//                     | ESC  | SPACE |  TAB  | # |     |       | HELD  |

            label = "Func";
            bindings = <
&trans  &kp F12  &kp F7  &kp F8   &kp F9     &kp PSCRN              &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp F11  &kp F4  &kp F5   &kp F6     &kp SLCK               &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp F10  &kp F1  &kp F2   &kp F3     &kp PAUSE_BREAK        &trans  &trans     &trans     &kp RALT  &trans    &trans
                         &kp ESC  &kp SPACE  &kp TAB                &trans  &trans     &trans
            >;
        };
    };
};

SHIFT_MACRO(u_bt_sel_0, &bt BT_SEL 0, &bt BT_SEL 0 &bt BT_CLR)
SHIFT_MACRO(u_bt_sel_1, &bt BT_SEL 1, &bt BT_SEL 1 &bt BT_CLR)
SHIFT_MACRO(u_bt_sel_2, &bt BT_SEL 2, &bt BT_SEL 2 &bt BT_CLR)
SHIFT_MACRO(u_bt_sel_3, &bt BT_SEL 3, &bt BT_SEL 3 &bt BT_CLR)
SHIFT_MACRO(u_bt_sel_4, &bt BT_SEL 4, &bt BT_SEL 4 &bt BT_CLR)

SHIFT_FUNCTION(u_out_tog, &out OUT_TOG, &out OUT_USB)
SHIFT_FUNCTION(u_caps_word, &caps_word, &kp CAPS)
